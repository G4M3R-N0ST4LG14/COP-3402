Source Program:

const max = 100, min = 1;
var counter, sum, avg, temp;

procedure computeAverage;
  var total, count;
  begin
    total := 0;
    count := 10;
    while count > 0 do
      begin
        read temp;
        total := total + temp;
        count := count - 1
      end;
    avg := total / 10
  end;

procedure displayResult;
  begin
    write avg
  end;

begin
  counter := 0;
  sum := 0;
  call computeAverage;
  call displayResult;
  if avg > max then
    avg := max
  else
    if avg < min then
      avg := min
    fi
  fi;
  write avg
end.


Lexeme Table:

lexeme		token type
const     	28
max       	2
=         	9
100       	3
,         	17
min       	2
=         	9
1         	3
;         	18
var       	29
counter   	2
,         	17
sum       	2
,         	17
avg       	2
,         	17
temp      	2
;         	18
procedure 	30
computeAver	2
var       	29
total     	2
,         	17
count     	2
;         	18
begin     	21
total     	2
:=        	20
0         	3
;         	18
count     	2
:=        	20
10        	3
;         	18
while     	25
count     	2
>         	13
0         	3
do        	26
begin     	21
read      	32
temp      	2
;         	18
total     	2
:=        	20
total     	2
+         	4
temp      	2
;         	18
count     	2
:=        	20
count     	2
-         	5
1         	3
end       	22
;         	18
avg       	2
:=        	20
total     	2
10        	3
end       	22
;         	18
procedure 	30
displayResu	2
begin     	21
write     	31
avg       	2
end       	22
;         	18
begin     	21
counter   	2
:=        	20
0         	3
;         	18
sum       	2
:=        	20
0         	3
;         	18
call      	27
computeAver	2
call      	27
displayResu	2
if        	23
avg       	2
>         	13
max       	2
then      	24
avg       	2
:=        	20
max       	2
else      	33
if        	23
avg       	2
<         	11
min       	2
then      	24
avg       	2
:=        	20
min       	2
fi        	8
fi        	8
;         	18
write     	31
avg       	2
end       	22
.         	19
